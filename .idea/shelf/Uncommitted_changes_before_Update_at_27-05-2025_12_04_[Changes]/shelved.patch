Index: app/src/main/java/com/example/gronkokken/components/firestore.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.gronkokken.components\r\n//filnavnet er med småt, men lad være med at fikse!!!, det dræber github.\r\nimport android.util.Log\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.runtime.getValue\r\nimport androidx.compose.runtime.mutableStateOf\r\nimport androidx.compose.runtime.remember\r\nimport androidx.compose.runtime.setValue\r\nimport com.example.gronkokken.dataclasses.Recipe\r\nimport com.google.firebase.Firebase\r\nimport com.google.firebase.firestore.FirebaseFirestore\r\nimport com.google.firebase.firestore.firestore\r\nimport com.google.firebase.firestore.toObject\r\nimport kotlinx.coroutines.tasks.await\r\n\r\nclass Firestore {\r\n\r\n    //connection detaljer kan findes i app/google-services.json\r\n    private val db = Firebase.firestore\r\n\r\n    //get all recipes\r\n    suspend fun old ():List<Recipe> {  //Christian\r\n        val collection = db.collection(\"recipes\")\r\n\r\n        val returnList:MutableList<Recipe> = mutableListOf()\r\n\r\n        collection.get().addOnSuccessListener { recipeList ->\r\n            if (!recipeList.isEmpty) {\r\n                recipeList.forEach{ recipe ->\r\n                    val recipeObj = recipe.toObject<Recipe>()\r\n                    returnList.add(recipeObj)\r\n                }\r\n            }\r\n            else {Log.d(\"DB-call\",\"recipe list is empty\")}\r\n        }.addOnFailureListener{\r\n            Log.d(\"DB-call\",\"lol, did not work\")\r\n        }\r\n\r\n        return returnList.toList()  //den returnere en tom liste, også hvis noget går galt, det tror jeg er fedest.\r\n        //Hvis vi har tid kan vi få appen til at skrive en fejlbesked i ui hvis den giver null fx.\r\n    }\r\n\r\n    suspend fun getAllRecipes ():List<Recipe> { //Christian\r\n        val collection = db.collection(\"recipes\")\r\n\r\n        val returnList:MutableList<Recipe> = mutableListOf()\r\n\r\n        collection.get().await().forEach {\r\n            returnList.add(it.toObject())\r\n        }\r\n\r\n        return returnList.toList()\r\n    }\r\n    suspend fun hentLaunchedEffectData(userId: String): Pair<String, String> { //Sahra\r\n        return try {\r\n            val doc = FirebaseFirestore.getInstance()\r\n                .collection(\"klimaplan\")\r\n                .document(userId)\r\n                .get()\r\n                .await()\r\n            if (doc.exists()) {\r\n                val startpunkt = doc.getString(\"startpunkt\") ?: \"\"\r\n                val slutpunkt = doc.getString(\"slutpunkt\") ?: \"\"\r\n                Pair(startpunkt, slutpunkt)\r\n            } else {\r\n                Pair(\"\", \"\")\r\n            }\r\n        } catch (e: Exception) {\r\n            Log.e(\"Firestore\", \"Fejl ved hentning\", e)\r\n            Pair(\"\", \"\")\r\n        }\r\n\r\n    }\r\n\r\n    fun gemKlimaplanData(userId: String, startpunkt: String, slutpunkt: String) {\r\n        val db = FirebaseFirestore.getInstance()\r\n        val data = hashMapOf(\r\n            \"startpunkt\" to startpunkt,\r\n            \"slutpunkt\" to slutpunkt\r\n        )\r\n\r\n        db.collection(\"klimaplan\")\r\n            .document(userId)\r\n            .set(data)\r\n            .addOnSuccessListener {\r\n                Log.d(\"Firestore\", \"Data gemt for $userId\")\r\n            }\r\n            .addOnFailureListener { e ->\r\n                Log.w(\"Firestore\", \"Fejl ved gemning\", e)\r\n            }\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/gronkokken/components/firestore.kt b/app/src/main/java/com/example/gronkokken/components/firestore.kt
--- a/app/src/main/java/com/example/gronkokken/components/firestore.kt	(revision 2dbd3dd94e5b212196a10de204568365f3a5d096)
+++ b/app/src/main/java/com/example/gronkokken/components/firestore.kt	(date 1748340137543)
@@ -6,7 +6,7 @@
 import androidx.compose.runtime.mutableStateOf
 import androidx.compose.runtime.remember
 import androidx.compose.runtime.setValue
-import com.example.gronkokken.dataclasses.Recipe
+import com.example.gronkokken.models.Recipe
 import com.google.firebase.Firebase
 import com.google.firebase.firestore.FirebaseFirestore
 import com.google.firebase.firestore.firestore
@@ -51,6 +51,7 @@
 
         return returnList.toList()
     }
+
     suspend fun hentLaunchedEffectData(userId: String): Pair<String, String> { //Sahra
         return try {
             val doc = FirebaseFirestore.getInstance()
Index: app/build.gradle.kts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>plugins {\r\n    alias(libs.plugins.android.application)\r\n    alias(libs.plugins.kotlin.android)\r\n    alias(libs.plugins.kotlin.compose)\r\n    id(\"com.google.gms.google-services\")\r\n}\r\n\r\nandroid {\r\n    namespace = \"com.example.gronkokken\"\r\n    compileSdk = 35\r\n\r\n    defaultConfig {\r\n        applicationId = \"com.example.gronkokken\"\r\n        minSdk = 26\r\n        targetSdk = 35\r\n        versionCode = 1\r\n        versionName = \"1.0\"\r\n\r\n        testInstrumentationRunner = \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            isMinifyEnabled = false\r\n            proguardFiles(\r\n                getDefaultProguardFile(\"proguard-android-optimize.txt\"),\r\n                \"proguard-rules.pro\"\r\n            )\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility = JavaVersion.VERSION_11\r\n        targetCompatibility = JavaVersion.VERSION_11\r\n    }\r\n    kotlinOptions {\r\n        jvmTarget = \"11\"\r\n    }\r\n    buildFeatures {\r\n        compose = true\r\n    }\r\n}\r\n\r\ndependencies {\r\n\r\n    implementation(libs.androidx.core.ktx)\r\n    implementation(libs.androidx.lifecycle.runtime.ktx)\r\n    implementation(libs.androidx.activity.compose)\r\n    implementation(platform(libs.androidx.compose.bom))\r\n    implementation(libs.androidx.ui)\r\n    implementation(libs.androidx.ui.graphics)\r\n    implementation(libs.androidx.ui.tooling.preview)\r\n    implementation(libs.androidx.material3)\r\n    implementation(libs.firebase.firestore.ktx)\r\n    implementation(libs.firebase.common.ktx)\r\n    implementation(libs.androidx.appcompat)\r\n    testImplementation(libs.junit)\r\n    androidTestImplementation(libs.androidx.junit)\r\n    androidTestImplementation(libs.androidx.espresso.core)\r\n    androidTestImplementation(platform(libs.androidx.compose.bom))\r\n    androidTestImplementation(libs.androidx.ui.test.junit4)\r\n    debugImplementation(libs.androidx.ui.tooling)\r\n    debugImplementation(libs.androidx.ui.test.manifest)\r\n    //firebase dependencies\r\n    implementation(platform(libs.firebase.bom))\r\n    implementation(libs.firebase.analytics)    //vi bruger ikke analytics til noget\r\n    implementation (\"com.google.firebase:firebase-auth:23.2.1\")\r\n    //viewmodel\r\n    implementation(libs.androidx.lifecycle.viewmodel.compose)\r\n    //navigation\r\n    implementation(libs.androidx.navigation.compose)\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/build.gradle.kts b/app/build.gradle.kts
--- a/app/build.gradle.kts	(revision 2dbd3dd94e5b212196a10de204568365f3a5d096)
+++ b/app/build.gradle.kts	(date 1748340137560)
@@ -63,7 +63,7 @@
     //firebase dependencies
     implementation(platform(libs.firebase.bom))
     implementation(libs.firebase.analytics)    //vi bruger ikke analytics til noget
-    implementation ("com.google.firebase:firebase-auth:23.2.1")
+    implementation ("com.google.firebase:firebase-auth:23.2.1") //firebase auth
     //viewmodel
     implementation(libs.androidx.lifecycle.viewmodel.compose)
     //navigation
Index: app/src/main/java/com/example/gronkokken/Navigation.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.gronkokken\r\n\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.navigation.NavHostController\r\nimport androidx.navigation.NavType\r\nimport androidx.navigation.compose.NavHost\r\nimport androidx.navigation.compose.composable\r\nimport androidx.navigation.navArgument\r\nimport com.example.gronkokken.recipeListScreen.RecipeListScreen\r\nimport com.example.gronkokken.repository.UserViewModel\r\nimport com.example.gronkokken.ui.pages.landingpage.Landingpage\r\nimport com.example.gronkokken.ui.pages.frontpage.FrontPageTest\r\nimport com.example.gronkokken.ui.pages.Register.RegisterPage\r\nimport com.example.gronkokken.ui.pages.landingpage.LandingpageTeacher\r\nimport com.example.gronkokken.ui.pages.login.LoginPage\r\nimport com.example.gronkokken.ui.pages.recipescreen.RecipeScreen\r\n\r\n@Composable\r\nfun Navigation (navHostController: NavHostController, userViewModel: UserViewModel) {\r\n    NavHost(navHostController,startDestination = \"landingpage\") {\r\n        fun recipeNavigateById (recipeId:String):Unit { //Christian\r\n            navHostController.navigate(\"recipe/$recipeId\")\r\n        }\r\n        composable(\"recipeListScreen\") {\r\n            RecipeListScreen(::recipeNavigateById)\r\n        }\r\n        composable( //Christian\r\n            route = \"recipe/{recipeId}\",\r\n            arguments = listOf(navArgument(name = \"recipeId\") { type = NavType.StringType })\r\n        ) {\r\n            RecipeScreen()\r\n        }\r\n        composable(\"landingpage\") {\r\n            Landingpage(userViewModel,\r\n                studentButtonClick = {\r\n                    navHostController.navigate(\"frontpage\")\r\n            },\r\n                teacherButtonClick = {\r\n                    navHostController.navigate(\"landingpage-teacher\")\r\n                },\r\n                guestButtonClick = {\r\n                    navHostController.navigate(\"frontpage\")\r\n                }\r\n\r\n            )\r\n        }\r\n        composable(\"landingpage-teacher\") {\r\n            LandingpageTeacher(\r\n                userViewModel,\r\n                loginButtonClick = {\r\n                    navHostController.navigate(\"loginpage\")\r\n                },\r\n                registerButtonClick = {\r\n                    navHostController.navigate(\"registerpage\")\r\n                },\r\n                onBackArrowClick = {\r\n                    navHostController.popBackStack()\r\n                }\r\n            )\r\n        }\r\n        composable(\"frontpage\") {\r\n            FrontPageTest(userViewModel)\r\n        }\r\n        composable(\"loginpage\") {\r\n            LoginPage(\r\n                onButtonClick = {\r\n                navHostController.navigate(\"frontpage\")\r\n            },\r\n                onBackArrowClick = {\r\n                    navHostController.popBackStack()\r\n                }\r\n            )\r\n        }\r\n        composable(\"registerpage\") {\r\n            RegisterPage(\r\n                onClick = {\r\n                    navHostController.navigate(\"frontpage\")\r\n                },\r\n                onBackArrowClick = {\r\n                    navHostController.popBackStack()\r\n                }\r\n            )\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/gronkokken/Navigation.kt b/app/src/main/java/com/example/gronkokken/Navigation.kt
--- a/app/src/main/java/com/example/gronkokken/Navigation.kt	(revision 2dbd3dd94e5b212196a10de204568365f3a5d096)
+++ b/app/src/main/java/com/example/gronkokken/Navigation.kt	(date 1748340137569)
@@ -8,6 +8,7 @@
 import androidx.navigation.navArgument
 import com.example.gronkokken.recipeListScreen.RecipeListScreen
 import com.example.gronkokken.repository.UserViewModel
+import com.example.gronkokken.ui.pages.ClimaPlanScreen
 import com.example.gronkokken.ui.pages.landingpage.Landingpage
 import com.example.gronkokken.ui.pages.frontpage.FrontPageTest
 import com.example.gronkokken.ui.pages.Register.RegisterPage
@@ -81,5 +82,8 @@
                 }
             )
         }
+        composable("ClimaPlanScreen") {
+            ClimaPlanScreen(userViewModel)
+        }
     }
 }
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_18-05-2025_21_24__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_18-05-2025_21_24__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_18-05-2025_21_24__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_18-05-2025_21_24__Changes_.xml	(revision 2dbd3dd94e5b212196a10de204568365f3a5d096)
+++ /dev/null	(revision 2dbd3dd94e5b212196a10de204568365f3a5d096)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Checkout_at_18-05-2025_21_24_[Changes]" date="1747596260540" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_18-05-2025_21_24_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 18-05-2025 21:24 [Changes]" />
-</changelist>
\ No newline at end of file
Index: app/src/main/java/com/example/gronkokken/ui/theme/klimaplan.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/gronkokken/ui/theme/klimaplan.kt b/app/src/main/java/com/example/gronkokken/ui/pages/klimaplan.kt
rename from app/src/main/java/com/example/gronkokken/ui/theme/klimaplan.kt
rename to app/src/main/java/com/example/gronkokken/ui/pages/klimaplan.kt
--- a/app/src/main/java/com/example/gronkokken/ui/theme/klimaplan.kt	(revision 2dbd3dd94e5b212196a10de204568365f3a5d096)
+++ b/app/src/main/java/com/example/gronkokken/ui/pages/klimaplan.kt	(date 1748340137597)
@@ -1,31 +1,20 @@
-package com.example.gronkokken.ui.theme
+package com.example.gronkokken.ui.pages
 
-import android.R.attr.contentDescription
-import android.R.attr.text
 import com.example.gronkokken.R
 import android.os.Bundle
-import android.util.Log
 import androidx.activity.ComponentActivity
 import androidx.activity.compose.setContent
 import androidx.compose.foundation.Image
-import androidx.compose.foundation.background
-import androidx.compose.foundation.layout.Arrangement
 import androidx.compose.foundation.layout.Box
 import androidx.compose.foundation.layout.Column
-import androidx.compose.foundation.layout.Row
 import androidx.compose.foundation.layout.Spacer
-import androidx.compose.foundation.layout.fillMaxSize
 import androidx.compose.foundation.layout.fillMaxWidth
 import androidx.compose.foundation.layout.height
 import androidx.compose.foundation.layout.padding
 import androidx.compose.foundation.layout.size
-import androidx.compose.foundation.layout.width
 import androidx.compose.foundation.rememberScrollState
 import androidx.compose.foundation.shape.RoundedCornerShape
 import androidx.compose.foundation.verticalScroll
-import androidx.compose.material.icons.Icons
-import androidx.compose.material.icons.automirrored.filled.ArrowBack
-import androidx.compose.material.icons.filled.ArrowBack
 import androidx.compose.material3.Button
 import androidx.compose.material3.ButtonDefaults
 import androidx.compose.material3.ExperimentalMaterial3Api
@@ -45,21 +34,15 @@
 import androidx.compose.ui.Alignment
 import androidx.compose.ui.Modifier
 import androidx.compose.ui.graphics.Color
-import androidx.compose.ui.layout.ContentScale
 import androidx.compose.ui.res.painterResource
 import androidx.compose.ui.text.font.Font
 import androidx.compose.ui.text.font.FontFamily
 import androidx.compose.ui.text.font.FontWeight
-import androidx.compose.ui.tooling.preview.Preview
 import androidx.compose.ui.unit.dp
 import androidx.compose.ui.unit.sp
 import androidx.lifecycle.viewmodel.compose.viewModel
 import com.example.gronkokken.components.Firestore
-import com.example.gronkokken.components.UserViewModel
-import com.example.gronkokken.ui.theme.GronKokkenTheme
 import com.google.firebase.auth.FirebaseAuth
-import com.google.firebase.firestore.FirebaseFirestore
-import kotlinx.coroutines.tasks.await
 
 
 class ClimaPlan : ComponentActivity() {
@@ -73,7 +56,7 @@
 
 @OptIn(ExperimentalMaterial3Api::class)
 @Composable
-fun ClimaPlanScreen(userViewModel: UserViewModel = viewModel()) {
+fun ClimaPlanScreen(userViewModel: com.example.gronkokken.repository.UserViewModel = viewModel()) {
     val robotoBold = FontFamily(Font(R.font.roboto))
     var startpunkt by remember { mutableStateOf("") }
     var slutpunkt by remember { mutableStateOf("") }
