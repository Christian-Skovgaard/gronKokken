Index: app/src/main/java/com/example/gronkokken/models/Recipe.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.gronkokken.models\r\n\r\nimport android.util.Log\r\nimport androidx.compose.runtime.mutableStateOf\r\nimport com.google.errorprone.annotations.Keep\r\nimport java.time.LocalDate\r\n\r\ndata class Recipe (  //Christian\r\n    //constructoren skal have defaults eller være nullable, ellers kan firestore ikke bruge den.\r\n    var id:String = \"\", //er var fordi den bliver opdateret efter objektet er lavet sidden det er metadata og ikke body\r\n    val name:String = \"\",\r\n    val flavorText:String = \"\",\r\n    val ingredientsRaw:List<Map<String,String>> = listOf(), //Vi gemmer i Map fordi jeg har haft mange problemer med at gemme i custom classes i firestore.\r\n    val instructions:String = \"\",\r\n    val ratings:List<Int> = listOf(),\r\n    val endDateRaw:String = \"2025-05-28\",\r\n    val peopleAmount:Int = 1\r\n    //form for billedliste\r\n) {\r\n    val avgRating = ratings.average()\r\n\r\n    val endDate:LocalDate = LocalDate.parse(endDateRaw)\r\n    private val startDate:LocalDate = endDate.minusDays(7)\r\n\r\n    //Den her string bruges til at vise ugen til brugeren.\r\n    var weekDatesString = \"${startDate.dayOfMonth}/${startDate.month} - ${endDate.dayOfMonth}/${endDate.month}\"\r\n\r\n\r\n    var ingredients: MutableList<RecipeIngredient> = mutableListOf()\r\n\r\n\r\n    init {\r\n        Log.d(\"lookmom\",\"ingredient raw size on construction = \" + ingredientsRaw.size.toString())\r\n        ingredientsRaw.forEach { ingredient ->\r\n            Log.d(\"lookmom\",ingredient.toString())\r\n            ingredients.add(\r\n                RecipeIngredient(\r\n                    name = ingredient[\"name\"].toString(),   //vi kunne gøre dem nullable for at slippe for Type-convertion, men så skulle vi deale med det senere når det skulle displayes\r\n                    amount = mutableStateOf(ingredient[\"amount\"].toString().toIntOrNull()), //sidden null ikke kan laves toInt(), bruges toIntOrNull()\r\n                    amountUnit = ingredient[\"amountUnit\"].toString()\r\n                )\r\n            )\r\n        }\r\n\r\n\r\n    }\r\n\r\n    fun createIngredientsFromRaw () {\r\n        //det her kode gør det samme som init-blokken, men sidden firestore bruger\r\n        // reflection til at indsætte data i klassen bliver initblokken ikke kørt når vi bruger\r\n        // .toObject(), derfor har vi brug for den her funktion til at køre efter et recipe-objekt\r\n        // er blevet hentet fra firebase.\r\n        // init-blokken er der stadig i tilfælde af at objektet bliver skabt organisk\r\n        ingredientsRaw.forEach { ingredient ->\r\n            Log.d(\"lookmom\",ingredient.toString())\r\n            ingredients.add(\r\n                RecipeIngredient(\r\n                    name = ingredient[\"name\"].toString(),   //vi kunne gøre dem nullable for at slippe for Type-convertion, men så skulle vi deale med det senere når det skulle displayes\r\n                    amount = mutableStateOf(ingredient[\"amount\"].toString().toIntOrNull()), //sidden null ikke kan laves toInt(), bruges toIntOrNull()\r\n                    amountUnit = ingredient[\"amountUnit\"].toString()\r\n                )\r\n            )\r\n        }\r\n    }\r\n\r\n    override fun toString(): String {\r\n        return \"Recipe(name='$name, ingredientsRaw=$ingredientsRaw, ingredients=$ingredients, ratings=$ratings')\"\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/gronkokken/models/Recipe.kt b/app/src/main/java/com/example/gronkokken/models/Recipe.kt
--- a/app/src/main/java/com/example/gronkokken/models/Recipe.kt	(revision 537922b587da8982bfd477a96797502f73837fdf)
+++ b/app/src/main/java/com/example/gronkokken/models/Recipe.kt	(date 1748443989407)
@@ -2,7 +2,6 @@
 
 import android.util.Log
 import androidx.compose.runtime.mutableStateOf
-import com.google.errorprone.annotations.Keep
 import java.time.LocalDate
 
 data class Recipe (  //Christian
@@ -19,7 +18,7 @@
 ) {
     val avgRating = ratings.average()
 
-    val endDate:LocalDate = LocalDate.parse(endDateRaw)
+    var endDate:LocalDate = LocalDate.parse(endDateRaw)
     private val startDate:LocalDate = endDate.minusDays(7)
 
     //Den her string bruges til at vise ugen til brugeren.
@@ -30,9 +29,7 @@
 
 
     init {
-        Log.d("lookmom","ingredient raw size on construction = " + ingredientsRaw.size.toString())
         ingredientsRaw.forEach { ingredient ->
-            Log.d("lookmom",ingredient.toString())
             ingredients.add(
                 RecipeIngredient(
                     name = ingredient["name"].toString(),   //vi kunne gøre dem nullable for at slippe for Type-convertion, men så skulle vi deale med det senere når det skulle displayes
@@ -45,8 +42,8 @@
 
     }
 
-    fun createIngredientsFromRaw () {
-        //det her kode gør det samme som init-blokken, men sidden firestore bruger
+    fun initLogic () {
+        //det her kode gør det samme som init-blokken, men siden firestore bruger
         // reflection til at indsætte data i klassen bliver initblokken ikke kørt når vi bruger
         // .toObject(), derfor har vi brug for den her funktion til at køre efter et recipe-objekt
         // er blevet hentet fra firebase.
@@ -61,6 +58,7 @@
                 )
             )
         }
+        endDate = LocalDate.parse(endDateRaw)
     }
 
     override fun toString(): String {
Index: app/src/main/java/com/example/gronkokken/repository/firestore.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.gronkokken.repository\r\n//filnavnet er med småt, men lad være med at fikse!!!, det gør github skræmt fra vid og sans :D.\r\nimport android.util.Log\r\nimport com.example.gronkokken.models.Recipe\r\nimport com.google.firebase.Firebase\r\nimport com.google.firebase.firestore.FirebaseFirestore\r\nimport com.google.firebase.firestore.firestore\r\nimport com.google.firebase.firestore.toObject\r\nimport kotlinx.coroutines.tasks.await\r\nimport java.time.LocalDate\r\n\r\nclass Firestore {\r\n\r\n    //connection detaljer kan findes i app/google-services.json\r\n    private val db = Firebase.firestore\r\n\r\n    suspend fun getAllRecipes ():List<Recipe> { //Christian\r\n        val collection = db.collection(\"recipes\")\r\n\r\n        val returnList:MutableList<Recipe> = mutableListOf()\r\n\r\n        collection.get().await().forEach {\r\n            val recipe: Recipe = it.toObject()\r\n            recipe.id = it.id\r\n            returnList.add(recipe)\r\n        }\r\n\r\n        return returnList.toList()\r\n    }\r\n\r\n    suspend fun getRecipeByName (name:String): Recipe { //Christian\r\n        val collection = db.collection(\"recipes\")\r\n\r\n        var recipe: Recipe = Recipe()\r\n\r\n        collection.whereEqualTo(\"name\",name).get().await().forEach {    //der kan være problemer hvis der kommer mere end 1 resultat, men det burde der ikke:D\r\n            recipe = it.toObject<Recipe>()\r\n            recipe.id = it.id\r\n            recipe.createIngredientsFromRaw()\r\n        }\r\n\r\n        return recipe\r\n    }\r\n\r\n    suspend fun getRecipeById (id:String): Recipe { //Christian\r\n        val document = db.collection(\"recipes\").document(id)\r\n\r\n        var recipe: Recipe = Recipe()\r\n\r\n        val item = document.get().await()\r\n\r\n        recipe = item.toObject<Recipe>()!!  //vi er sikre på at der ikke er null, siden alle id som bruges i appen er taget fra databasen\r\n        recipe.id = item.id\r\n        recipe.createIngredientsFromRaw()\r\n\r\n        return recipe\r\n    }\r\n\r\n    suspend fun getCurrentRecipeId ():String {  //Christian\r\n        val currentDate = LocalDate.now()\r\n        val daysToNextSunday = java.time.DayOfWeek.SUNDAY.value - currentDate.dayOfWeek.value //søndag er altid 7, har bare inkluderet DayOfWeek så det var nemere lige at gennemskue hvad der sker\r\n        val comingSunday = currentDate.plusDays(daysToNextSunday.toLong())\r\n\r\n        val collection = db.collection(\"recipes\")\r\n        val responseList = collection.whereEqualTo(\"endDateRaw\",comingSunday.toString()).get().await()\r\n\r\n        if (responseList.size() > 1) {\r\n            Log.d(\"DB-Call\",\"missing or overlapping date in DB\")\r\n            return responseList.toList()[0].id\r\n        }\r\n        else if (responseList.size() < 1) {\r\n            Log.d(\"DB-Call\",\"no opskrift i dag<3, fejl\")\r\n            return \"problem\"\r\n        }\r\n        else {\r\n            return responseList.toList()[0].id\r\n        }\r\n    }\r\n\r\n    suspend fun hentLaunchedEffectData(userId: String): Pair<String, String> { //Sahra\r\n        return try {\r\n            val doc = FirebaseFirestore.getInstance()\r\n                .collection(\"klimaplan\")\r\n                .document(userId)\r\n                .get()\r\n                .await()\r\n            if (doc.exists()) {\r\n                val startpunkt = doc.getString(\"startpunkt\") ?: \"\"\r\n                val slutpunkt = doc.getString(\"slutpunkt\") ?: \"\"\r\n                Pair(startpunkt, slutpunkt)\r\n            } else {\r\n                Pair(\"\", \"\")\r\n            }\r\n        } catch (e: Exception) {\r\n            Log.e(\"Firestore\", \"Fejl ved hentning\", e)\r\n            Pair(\"\", \"\")\r\n        }\r\n\r\n    }\r\n\r\n    fun gemKlimaplanData(userId: String, startpunkt: String, slutpunkt: String) {   //Sahra\r\n        val db = FirebaseFirestore.getInstance()\r\n        val data = hashMapOf(\r\n            \"startpunkt\" to startpunkt,\r\n            \"slutpunkt\" to slutpunkt\r\n        )\r\n\r\n        db.collection(\"klimaplan\")\r\n            .document(userId)\r\n            .set(data)\r\n            .addOnSuccessListener {\r\n                Log.d(\"Firestore\", \"Data gemt for $userId\")\r\n            }\r\n            .addOnFailureListener { e ->\r\n                Log.w(\"Firestore\", \"Fejl ved gemning\", e)\r\n            }\r\n    }\r\n\r\n    //used for uploading recipes\r\n    suspend fun uploadRecipe (\r\n        name:String = \"\",\r\n//        flavorText:String = \"\",\r\n//        ingredientsRaw:List<Map<String,String>> = listOf(), //Vi gemmer i Map fordi jeg har haft mange problemer med at gemme i custom classes i firestore.\r\n//        instructions:String = \"\",\r\n//        ratings:List<Int> = listOf(),\r\n//        endDateRaw:String = \"2025-05-28\",\r\n//        peopleAmount:Int = 1\r\n    ) {\r\n        val collection = db.collection(\"recipes\")\r\n\r\n        Log.d(\"lookhere\",collection.add(name).await().id)\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/gronkokken/repository/firestore.kt b/app/src/main/java/com/example/gronkokken/repository/firestore.kt
--- a/app/src/main/java/com/example/gronkokken/repository/firestore.kt	(revision 537922b587da8982bfd477a96797502f73837fdf)
+++ b/app/src/main/java/com/example/gronkokken/repository/firestore.kt	(date 1748442446532)
@@ -22,9 +22,11 @@
         collection.get().await().forEach {
             val recipe: Recipe = it.toObject()
             recipe.id = it.id
+            recipe.initLogic()
             returnList.add(recipe)
         }
 
+        Log.d("DB-Call","amount of collected recipes: " + returnList.size.toString())
         return returnList.toList()
     }
 
@@ -36,7 +38,7 @@
         collection.whereEqualTo("name",name).get().await().forEach {    //der kan være problemer hvis der kommer mere end 1 resultat, men det burde der ikke:D
             recipe = it.toObject<Recipe>()
             recipe.id = it.id
-            recipe.createIngredientsFromRaw()
+            recipe.initLogic()
         }
 
         return recipe
@@ -51,7 +53,7 @@
 
         recipe = item.toObject<Recipe>()!!  //vi er sikre på at der ikke er null, siden alle id som bruges i appen er taget fra databasen
         recipe.id = item.id
-        recipe.createIngredientsFromRaw()
+        recipe.initLogic()
 
         return recipe
     }
@@ -115,19 +117,4 @@
                 Log.w("Firestore", "Fejl ved gemning", e)
             }
     }
-
-    //used for uploading recipes
-    suspend fun uploadRecipe (
-        name:String = "",
-//        flavorText:String = "",
-//        ingredientsRaw:List<Map<String,String>> = listOf(), //Vi gemmer i Map fordi jeg har haft mange problemer med at gemme i custom classes i firestore.
-//        instructions:String = "",
-//        ratings:List<Int> = listOf(),
-//        endDateRaw:String = "2025-05-28",
-//        peopleAmount:Int = 1
-    ) {
-        val collection = db.collection("recipes")
-
-        Log.d("lookhere",collection.add(name).await().id)
-    }
 }
\ No newline at end of file
Index: app/src/main/java/com/example/gronkokken/MainActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.gronkokken\r\n\r\nimport android.content.Context\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport androidx.activity.ComponentActivity\r\nimport androidx.activity.compose.setContent\r\nimport androidx.activity.enableEdgeToEdge\r\nimport androidx.compose.foundation.layout.fillMaxSize\r\nimport androidx.compose.foundation.layout.padding\r\nimport androidx.compose.material3.Scaffold\r\nimport androidx.compose.material3.Text\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.tooling.preview.Preview\r\nimport androidx.lifecycle.ViewModel\r\nimport androidx.lifecycle.viewModelScope\r\nimport androidx.lifecycle.viewmodel.compose.viewModel\r\nimport androidx.navigation.compose.rememberNavController\r\nimport com.example.gronkokken.components.InternalStorage\r\nimport com.example.gronkokken.recipeListScreen.RecipeListScreen\r\nimport com.example.gronkokken.com.example.gronkokken.ui.pages.Frontpage.FrontPageScreen\r\nimport com.example.gronkokken.com.example.gronkokken.ui.pages.Frontpage.FrontPageTeacherScreen\r\nimport com.example.gronkokken.repository.Firestore\r\nimport com.example.gronkokken.repository.UserViewModel\r\nimport com.example.gronkokken.ui.theme.GronKokkenTheme\r\nimport com.google.firebase.Firebase\r\nimport com.google.firebase.firestore.FirebaseFirestore\r\nimport com.google.firebase.firestore.firestore\r\nimport kotlinx.coroutines.launch\r\nimport kotlinx.coroutines.tasks.await\r\nimport java.time.LocalDate\r\n\r\nclass MainActivity : ComponentActivity() {\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        enableEdgeToEdge()\r\n        setContent {\r\n            val userViewModel: UserViewModel = viewModel()\r\n            val navController = rememberNavController()\r\n\r\n            val viewModel:TestViewModel = viewModel()\r\n\r\n            GronKokkenTheme {   //tror ikke vi bruger theme nogen stedder?\r\n                Navigation(\r\n                    navHostController = navController,\r\n                    userViewModel = userViewModel\r\n                )\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nclass TestViewModel: ViewModel() {\r\n    val firestore = Firestore()\r\n\r\n    init {\r\n        viewModelScope.launch {\r\n            firestore.uploadRecipe(name = \"General Kenobi\")\r\n        }\r\n\r\n    }\r\n}\r\n\r\n@Composable\r\nfun Greeting(name: String, modifier: Modifier = Modifier) {\r\n    Text(\r\n        text = \"Hello $name!\",\r\n        modifier = modifier\r\n    )\r\n}\r\n\r\n@Preview(showBackground = true)\r\n@Composable\r\nfun GreetingPreview() {\r\n    GronKokkenTheme {\r\n        Greeting(\"Android\")\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/gronkokken/MainActivity.kt b/app/src/main/java/com/example/gronkokken/MainActivity.kt
--- a/app/src/main/java/com/example/gronkokken/MainActivity.kt	(revision 537922b587da8982bfd477a96797502f73837fdf)
+++ b/app/src/main/java/com/example/gronkokken/MainActivity.kt	(date 1748441394670)
@@ -39,7 +39,7 @@
             val userViewModel: UserViewModel = viewModel()
             val navController = rememberNavController()
 
-            val viewModel:TestViewModel = viewModel()
+            // val viewModel:TestViewModel = viewModel()
 
             GronKokkenTheme {   //tror ikke vi bruger theme nogen stedder?
                 Navigation(
@@ -51,16 +51,6 @@
     }
 }
 
-class TestViewModel: ViewModel() {
-    val firestore = Firestore()
-
-    init {
-        viewModelScope.launch {
-            firestore.uploadRecipe(name = "General Kenobi")
-        }
-
-    }
-}
 
 @Composable
 fun Greeting(name: String, modifier: Modifier = Modifier) {
Index: app/src/main/java/com/example/gronkokken/ui/pages/recipescreen/RecipeScreenViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.gronkokken.ui.pages.recipescreen\r\n\r\nimport android.util.Log\r\nimport androidx.compose.runtime.MutableState\r\nimport androidx.compose.runtime.mutableStateListOf\r\nimport androidx.compose.runtime.mutableStateOf\r\nimport androidx.lifecycle.SavedStateHandle\r\nimport androidx.lifecycle.ViewModel\r\nimport androidx.lifecycle.viewModelScope\r\nimport com.example.gronkokken.models.Recipe\r\nimport com.example.gronkokken.repository.Firestore\r\nimport kotlinx.coroutines.launch\r\n\r\nclass RecipeScreenViewModel(savedStateHandle: SavedStateHandle): ViewModel() {  //Christian\r\n    val recipeID:String = savedStateHandle[\"recipeId\"] ?: \"\"\r\n\r\n    val fireStore = Firestore()\r\n\r\n    var loading: MutableState<Boolean> = mutableStateOf(true)  //default skal være true\r\n\r\n    var recipe:Recipe = Recipe()\r\n\r\n    //val internalStorage = InternalStorage()\r\n\r\n    //ingredientCheckbox\r\n    val ingredientCheckboxState: MutableList<MutableState<Boolean>> = mutableStateListOf()\r\n    fun onIngredientCheckboxClick (i:Int) {\r\n        ingredientCheckboxState[i].value = !ingredientCheckboxState[i].value\r\n    }\r\n\r\n    //ratingSystem\r\n    val ratingStarList:MutableList<MutableState<String>> = MutableList(5) {mutableStateOf(\"☆\")} //den laver en liste med size 5 og tilføjer det i lamda til hver\r\n    fun updateRating (index:Int) {\r\n        for (j in 0..ratingStarList.size-1) {\r\n            if (index >= j) {ratingStarList[j].value = \"★\"}\r\n            else {ratingStarList[j].value = \"☆\"}\r\n        }\r\n    }\r\n\r\n    init {\r\n        Log.d(\"lookmom\",\"started recipeScreen\")\r\n        viewModelScope.launch {\r\n            recipe = fireStore.getRecipeById(recipeID)\r\n            recipe.ingredients.forEach {\r\n                ingredientCheckboxState.add(mutableStateOf(false))\r\n            }\r\n            loading.value = false\r\n            Log.d(\"lookmom\",\"ended fetch\")\r\n        }\r\n\r\n    }\r\n\r\n    override fun onCleared() {  //function som kører når man lukker viewmodlen, ligesom init kører når man starter.\r\n        super.onCleared()\r\n        //kald med bedømmelse til db\r\n    }\r\n/*\r\n    //Recipe til testing uden db-call hvis nogen skal bruge:D\r\n    recipe = Recipe(\r\n    name = \"Cannelloni med svampe og spinat\",\r\n    flavorText = \"Den lækre italienske ret med masser af smag og fyld. Server eventuelt en grøn salat ved siden af\",\r\n    ingredientsRaw = listOf(\r\n    mapOf(\r\n    \"name\" to \"tomater mosede eller hakkede\",\r\n    \"amount\" to \"800\",\r\n    \"amountUnit\" to \"g\"),\r\n    mapOf(\r\n    \"name\" to \"olivenolie\",\r\n    \"amount\" to \"3\",\r\n    \"amountUnit\" to \"spsk.\"),\r\n    mapOf(\r\n    \"name\" to \"hvidløg Presset\",\r\n    \"amount\" to \"2\",\r\n    \"amountUnit\" to \"fed\")\r\n    ),\r\n    instructions = \"Tænd ovnen på 200 grader, og smør et ovnfast fad med olie.\" +\r\n    \"2\" +\r\n    \"Tomatsauce: Bland tomat, olivenolie, hvidløg og basilikum. Blend igennem med en stavblender. Rør kapers i og smag til med sukker, salt og peber.\",\r\n    ratings = listOf(),\r\n    endDateRaw = \"2025-06-01\",\r\n    peopleAmount = 4\r\n    )\r\n */\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/gronkokken/ui/pages/recipescreen/RecipeScreenViewModel.kt b/app/src/main/java/com/example/gronkokken/ui/pages/recipescreen/RecipeScreenViewModel.kt
--- a/app/src/main/java/com/example/gronkokken/ui/pages/recipescreen/RecipeScreenViewModel.kt	(revision 537922b587da8982bfd477a96797502f73837fdf)
+++ b/app/src/main/java/com/example/gronkokken/ui/pages/recipescreen/RecipeScreenViewModel.kt	(date 1748443989445)
@@ -38,14 +38,12 @@
     }
 
     init {
-        Log.d("lookmom","started recipeScreen")
         viewModelScope.launch {
             recipe = fireStore.getRecipeById(recipeID)
             recipe.ingredients.forEach {
                 ingredientCheckboxState.add(mutableStateOf(false))
             }
             loading.value = false
-            Log.d("lookmom","ended fetch")
         }
 
     }
Index: .idea/shelf/Uncommitted_changes_before_Update_at_20-05-2025_12_42_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_20-05-2025_12_42_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_20-05-2025_12_42_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_20-05-2025_12_42_[Changes]/shelved.patch	(revision 537922b587da8982bfd477a96797502f73837fdf)
+++ /dev/null	(revision 537922b587da8982bfd477a96797502f73837fdf)
@@ -1,36 +0,0 @@
-Index: gradle/libs.versions.toml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>[versions]\r\nagp = \"8.8.2\"\r\nfirebaseBom = \"33.13.0\"\r\nkotlin = \"2.0.0\"\r\ncoreKtx = \"1.16.0\"\r\njunit = \"4.13.2\"\r\njunitVersion = \"1.2.1\"\r\nespressoCore = \"3.6.1\"\r\nlifecycleRuntimeKtx = \"2.9.0\"\r\nactivityCompose = \"1.10.1\"\r\ncomposeBom = \"2024.04.01\"\r\nfirebaseFirestoreKtx = \"25.1.4\"\r\n\r\n[libraries]\r\nandroidx-core-ktx = { group = \"androidx.core\", name = \"core-ktx\", version.ref = \"coreKtx\" }\r\nfirebase-analytics = { module = \"com.google.firebase:firebase-analytics\" }\r\nfirebase-bom = { module = \"com.google.firebase:firebase-bom\", version.ref = \"firebaseBom\" }\r\njunit = { group = \"junit\", name = \"junit\", version.ref = \"junit\" }\r\nandroidx-junit = { group = \"androidx.test.ext\", name = \"junit\", version.ref = \"junitVersion\" }\r\nandroidx-espresso-core = { group = \"androidx.test.espresso\", name = \"espresso-core\", version.ref = \"espressoCore\" }\r\nandroidx-lifecycle-runtime-ktx = { group = \"androidx.lifecycle\", name = \"lifecycle-runtime-ktx\", version.ref = \"lifecycleRuntimeKtx\" }\r\nandroidx-activity-compose = { group = \"androidx.activity\", name = \"activity-compose\", version.ref = \"activityCompose\" }\r\nandroidx-compose-bom = { group = \"androidx.compose\", name = \"compose-bom\", version.ref = \"composeBom\" }\r\nandroidx-ui = { group = \"androidx.compose.ui\", name = \"ui\" }\r\nandroidx-ui-graphics = { group = \"androidx.compose.ui\", name = \"ui-graphics\" }\r\nandroidx-ui-tooling = { group = \"androidx.compose.ui\", name = \"ui-tooling\" }\r\nandroidx-ui-tooling-preview = { group = \"androidx.compose.ui\", name = \"ui-tooling-preview\" }\r\nandroidx-ui-test-manifest = { group = \"androidx.compose.ui\", name = \"ui-test-manifest\" }\r\nandroidx-ui-test-junit4 = { group = \"androidx.compose.ui\", name = \"ui-test-junit4\" }\r\nandroidx-material3 = { group = \"androidx.compose.material3\", name = \"material3\" }\r\nfirebase-firestore-ktx = { group = \"com.google.firebase\", name = \"firebase-firestore-ktx\", version.ref = \"firebaseFirestoreKtx\" }\r\n\r\n[plugins]\r\nandroid-application = { id = \"com.android.application\", version.ref = \"agp\" }\r\nkotlin-android = { id = \"org.jetbrains.kotlin.android\", version.ref = \"kotlin\" }\r\nkotlin-compose = { id = \"org.jetbrains.kotlin.plugin.compose\", version.ref = \"kotlin\" }\r\n\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/gradle/libs.versions.toml b/gradle/libs.versions.toml
---- a/gradle/libs.versions.toml	(revision ec521228faae24ed7785bccd066fcf34a9acd67c)
-+++ b/gradle/libs.versions.toml	(date 1747658112565)
-@@ -1,5 +1,5 @@
- [versions]
--agp = "8.8.2"
-+agp = "8.10.0"
- firebaseBom = "33.13.0"
- kotlin = "2.0.0"
- coreKtx = "1.16.0"
-Index: .idea/vcs.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"VcsDirectoryMappings\" defaultProject=\"true\" />\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/vcs.xml b/.idea/vcs.xml
---- a/.idea/vcs.xml	(revision ec521228faae24ed7785bccd066fcf34a9acd67c)
-+++ b/.idea/vcs.xml	(date 1747654977351)
-@@ -1,4 +1,6 @@
- <?xml version="1.0" encoding="UTF-8"?>
- <project version="4">
--  <component name="VcsDirectoryMappings" defaultProject="true" />
-+  <component name="VcsDirectoryMappings">
-+    <mapping directory="$PROJECT_DIR$" vcs="Git" />
-+  </component>
- </project>
-\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_20-05-2025_12_42__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_20-05-2025_12_42__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_20-05-2025_12_42__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_20-05-2025_12_42__Changes_.xml	(revision 537922b587da8982bfd477a96797502f73837fdf)
+++ /dev/null	(revision 537922b587da8982bfd477a96797502f73837fdf)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_20-05-2025_12_42_[Changes]" date="1747738293461" recycled="false" toDelete="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_20-05-2025_12_42_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 20-05-2025 12:42 [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_20-05-2025_12_42__Changes_1.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_20-05-2025_12_42__Changes_1.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_20-05-2025_12_42__Changes_1.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_20-05-2025_12_42__Changes_1.xml	(revision 537922b587da8982bfd477a96797502f73837fdf)
+++ /dev/null	(revision 537922b587da8982bfd477a96797502f73837fdf)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_20-05-2025_12_42_[Changes]1" date="1747738288565" recycled="false" toDelete="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_20-05-2025_12_42_[Changes]1/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 20-05-2025 12:42 [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_20-05-2025_12_42_[Changes]1/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_20-05-2025_12_42_[Changes]1/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_20-05-2025_12_42_[Changes]1/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_20-05-2025_12_42_[Changes]1/shelved.patch	(revision 537922b587da8982bfd477a96797502f73837fdf)
+++ /dev/null	(revision 537922b587da8982bfd477a96797502f73837fdf)
@@ -1,18 +0,0 @@
-Index: gradle/wrapper/gradle-wrapper.properties
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>#Wed May 14 13:29:47 CEST 2025\r\ndistributionBase=GRADLE_USER_HOME\r\ndistributionPath=wrapper/dists\r\ndistributionUrl=https\\://services.gradle.org/distributions/gradle-8.10.2-bin.zip\r\nzipStoreBase=GRADLE_USER_HOME\r\nzipStorePath=wrapper/dists\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>ISO-8859-1
-===================================================================
-diff --git a/gradle/wrapper/gradle-wrapper.properties b/gradle/wrapper/gradle-wrapper.properties
---- a/gradle/wrapper/gradle-wrapper.properties	(revision ec521228faae24ed7785bccd066fcf34a9acd67c)
-+++ b/gradle/wrapper/gradle-wrapper.properties	(date 1747658112613)
-@@ -1,6 +1,6 @@
- #Wed May 14 13:29:47 CEST 2025
- distributionBase=GRADLE_USER_HOME
- distributionPath=wrapper/dists
--distributionUrl=https\://services.gradle.org/distributions/gradle-8.10.2-bin.zip
-+distributionUrl=https\://services.gradle.org/distributions/gradle-8.11.1-bin.zip
- zipStoreBase=GRADLE_USER_HOME
- zipStorePath=wrapper/dists
Index: app/src/main/java/com/example/gronkokken/Navigation.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.gronkokken\r\n\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.navigation.NavHostController\r\nimport androidx.navigation.NavType\r\nimport androidx.navigation.compose.NavHost\r\nimport androidx.navigation.compose.composable\r\nimport androidx.navigation.navArgument\r\nimport com.example.gronkokken.recipeListScreen.RecipeListScreen\r\nimport com.example.gronkokken.repository.UserViewModel\r\nimport com.example.gronkokken.ui.pages.ClimaPlanScreen\r\nimport com.example.gronkokken.ui.pages.landingpage.Landingpage\r\nimport com.example.gronkokken.ui.pages.frontpage.FrontPageTest\r\nimport com.example.gronkokken.ui.pages.Register.RegisterPage\r\nimport com.example.gronkokken.ui.pages.landingpage.LandingpageTeacher\r\nimport com.example.gronkokken.ui.pages.login.LoginPage\r\nimport com.example.gronkokken.ui.pages.recipescreen.RecipeScreen\r\n\r\n@Composable\r\nfun Navigation (navHostController: NavHostController, userViewModel: UserViewModel) {\r\n    NavHost(navHostController,startDestination = \"landingpage\") {\r\n        fun recipeNavigateById (recipeId:String):Unit { //Christian\r\n            navHostController.navigate(\"recipe/$recipeId\")\r\n        }\r\n        composable(\"recipeListScreen\") {\r\n            RecipeListScreen(::recipeNavigateById)\r\n        }\r\n        composable( //Christian\r\n            route = \"recipe/{recipeId}\",\r\n            arguments = listOf(navArgument(name = \"recipeId\") { type = NavType.StringType })\r\n        ) {\r\n            RecipeScreen()\r\n        }\r\n        composable(\"landingpage\") {\r\n            Landingpage(userViewModel,\r\n                studentButtonClick = {\r\n                    navHostController.navigate(\"frontpage\")\r\n            },\r\n                teacherButtonClick = {\r\n                    navHostController.navigate(\"landingpage-teacher\")\r\n                },\r\n                guestButtonClick = {\r\n                    navHostController.navigate(\"frontpage\")\r\n                }\r\n\r\n            )\r\n        }\r\n        composable(\"landingpage-teacher\") {\r\n            LandingpageTeacher(\r\n                userViewModel,\r\n                loginButtonClick = {\r\n                    navHostController.navigate(\"loginpage\")\r\n                },\r\n                registerButtonClick = {\r\n                    navHostController.navigate(\"registerpage\")\r\n                },\r\n                onBackArrowClick = {\r\n                    navHostController.popBackStack()\r\n                }\r\n            )\r\n        }\r\n        composable(\"frontpage\") {\r\n            FrontPageTest(\r\n                userViewModel,\r\n                navHostController = navHostController\r\n            )\r\n        }\r\n        composable(\"loginpage\") {\r\n            LoginPage(\r\n                onButtonClick = {\r\n                navHostController.navigate(\"frontpage\")\r\n            },\r\n                onBackArrowClick = {\r\n                    navHostController.popBackStack()\r\n                }\r\n            )\r\n        }\r\n        composable(\"registerpage\") {\r\n            RegisterPage(\r\n                onClick = {\r\n                    navHostController.navigate(\"frontpage\")\r\n                },\r\n                onBackArrowClick = {\r\n                    navHostController.popBackStack()\r\n                }\r\n            )\r\n        }\r\n        composable(\"climate\") {\r\n            ClimaPlanScreen(userViewModel, navHostController) //hvad er det for navn, lol\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/gronkokken/Navigation.kt b/app/src/main/java/com/example/gronkokken/Navigation.kt
--- a/app/src/main/java/com/example/gronkokken/Navigation.kt	(revision 537922b587da8982bfd477a96797502f73837fdf)
+++ b/app/src/main/java/com/example/gronkokken/Navigation.kt	(date 1748438511126)
@@ -86,7 +86,9 @@
             )
         }
         composable("climate") {
-            ClimaPlanScreen(userViewModel, navHostController) //hvad er det for navn, lol
+            ClimaPlanScreen(        //hvad er det for navn, lol
+                userViewModel,
+                navHostController)
         }
     }
 }
\ No newline at end of file
Index: app/src/main/java/com/example/gronkokken/ui/pages/klimaplan.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.gronkokken.ui.pages\r\n\r\nimport com.example.gronkokken.R\r\nimport android.os.Bundle\r\nimport androidx.activity.ComponentActivity\r\nimport androidx.activity.compose.setContent\r\nimport androidx.compose.foundation.Image\r\nimport androidx.compose.foundation.layout.Box\r\nimport androidx.compose.foundation.layout.Column\r\nimport androidx.compose.foundation.layout.Spacer\r\nimport androidx.compose.foundation.layout.fillMaxWidth\r\nimport androidx.compose.foundation.layout.height\r\nimport androidx.compose.foundation.layout.padding\r\nimport androidx.compose.foundation.layout.size\r\nimport androidx.compose.foundation.rememberScrollState\r\nimport androidx.compose.foundation.shape.RoundedCornerShape\r\nimport androidx.compose.foundation.verticalScroll\r\nimport androidx.compose.material3.Button\r\nimport androidx.compose.material3.ButtonDefaults\r\nimport androidx.compose.material3.ExperimentalMaterial3Api\r\nimport androidx.compose.material3.Icon\r\nimport androidx.compose.material3.IconButton\r\nimport androidx.compose.material3.Scaffold\r\nimport androidx.compose.material3.Text\r\nimport androidx.compose.material3.TextField\r\nimport androidx.compose.material3.TextFieldDefaults\r\nimport androidx.compose.material3.TopAppBar\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.runtime.LaunchedEffect\r\nimport androidx.compose.runtime.getValue\r\nimport androidx.compose.runtime.mutableStateOf\r\nimport androidx.compose.runtime.remember\r\nimport androidx.compose.runtime.setValue\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.graphics.Color\r\nimport androidx.compose.ui.res.painterResource\r\nimport androidx.compose.ui.text.font.Font\r\nimport androidx.compose.ui.text.font.FontFamily\r\nimport androidx.compose.ui.text.font.FontWeight\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.compose.ui.unit.sp\r\nimport androidx.lifecycle.viewmodel.compose.viewModel\r\nimport androidx.navigation.NavHostController\r\nimport com.example.gronkokken.repository.Firestore\r\nimport com.google.firebase.auth.FirebaseAuth\r\n\r\n\r\n//class ClimaPlan : ComponentActivity() {\r\n//    override fun onCreate(savedInstanceState: Bundle?) {\r\n//        super.onCreate(savedInstanceState)\r\n//        setContent {\r\n//            ClimaPlanScreen()\r\n//        }\r\n//    }\r\n//}\r\n\r\n@OptIn(ExperimentalMaterial3Api::class)\r\n@Composable\r\nfun ClimaPlanScreen(userViewModel: com.example.gronkokken.repository.UserViewModel = viewModel(), navHostController: NavHostController) {\r\n    val robotoBold = FontFamily(Font(R.font.roboto))\r\n    var startpunkt by remember { mutableStateOf(\"\") }\r\n    var slutpunkt by remember { mutableStateOf(\"\") }\r\n\r\n    val user = FirebaseAuth.getInstance().currentUser\r\n    val userId = user?.uid\r\n\r\n    val fireStore = Firestore()\r\n    LaunchedEffect(userId) {\r\n        val (startpunkt, slutpunkt) = fireStore.hentLaunchedEffectData(userId = \"\")\r\n\r\n    }\r\n\r\n\r\n\r\n    Scaffold(\r\n        topBar = {\r\n            TopAppBar(\r\n                title = {},\r\n                navigationIcon = {\r\n                    IconButton(onClick = { navHostController.popBackStack() }) {\r\n                        Icon(\r\n                            painter = painterResource(id = R.drawable.baseline_arrow_back_ios_24),\r\n                            contentDescription = \"Tilbage\"\r\n                        )\r\n\r\n                    }\r\n\r\n                }\r\n            )\r\n        }\r\n    )\r\n    { innerPadding ->\r\n\r\n\r\n        Column(\r\n            modifier = Modifier\r\n                .padding(innerPadding)\r\n                .padding(16.dp)\r\n                .verticalScroll(rememberScrollState())\r\n        ) {\r\n\r\n            // Titel\r\n            Box(\r\n                modifier = Modifier\r\n                    .fillMaxWidth(),\r\n                contentAlignment = Alignment.Center // centrerer indholdet\r\n            ) {\r\n                Text(\r\n                    text = \"Vores Klimaplan\",\r\n                    fontSize = 36.sp,\r\n                    fontFamily = robotoBold,\r\n                    color = Color(0xFF4CAF50)\r\n                )\r\n            }\r\n\r\n            Spacer(modifier = Modifier.height(16.dp))\r\n\r\n            // Info sektioner\r\n            InfoSection(\r\n                title = \"\uD83C\uDF0D Hvad handler det om?\",\r\n                description = \"Klimaforandringer påvirker hele verden – ikke kun Danmark. Derfor ser vi også på, hvordan vores valg og forbrug påvirker klimaet globalt. Det handler ikke kun om CO2 herhjemme, men også om den påvirkning vores mad, tøj og elektronik har i andre lande, hvor de bliver produceret.\"\r\n            )\r\n\r\n            InfoSection(\r\n                title = \"\uD83D\uDCDF CO2-beregneren\",\r\n                description = \"Vi har udviklet en simpel beregner, der kan vise dig, hvor meget du forurener i hverdagen. Den fokuserer især på mad, fordi det er et område, hvor man kan gøre en stor forskel. Du får konkrete råd til, hvordan du kan hjælpe klimaet gennem små ændringer.\"\r\n            )\r\n\r\n            InfoSection(\r\n                title = \"\uD83D\uDCCA Hvor meget CO2 udleder vi?\",\r\n                description = \"En gennemsnitlig dansker udleder omkring 11 tons CO2 om året. Det er alt for meget, hvis vi skal nå klimamålene. Derfor skal vi hjælpe hinanden med at reducere det tal, og det starter med viden og motivation – særligt blandt unge.\"\r\n            )\r\n\r\n\r\n            // Test-opfordring\r\n            Text(\r\n                text = \"Tag klimaplans-testen!\",\r\n                fontSize = 18.sp,\r\n                fontWeight = FontWeight.Bold,\r\n                color = Color(0xFF4CAF50)\r\n            )\r\n            Text(\r\n                text = \"Find ud af, hvad dit startpunkt er , og tag testen igen sidst på skoleåret og se, om du er blevet mere klimavenlig.\",\r\n                fontSize = 16.sp\r\n            )\r\n\r\n            Spacer(modifier = Modifier.height(8.dp))\r\n\r\n            // Link\r\n            Text(\r\n                text = \"https://voresklimaplan.dk/co2calculator\",\r\n                color = Color.Blue,\r\n                fontSize = 14.sp\r\n            )\r\n\r\n            Spacer(modifier = Modifier.height(24.dp))\r\n\r\n            // \"Startpunkt\" input felt\r\n            Text(\r\n                text = \"Startpunkt\",\r\n                fontWeight = FontWeight.Bold,\r\n                color = Color(0xFF4CAF50)\r\n            )\r\n            TextField(\r\n                value = startpunkt,\r\n                onValueChange = { startpunkt = it },\r\n                modifier = Modifier\r\n                    .fillMaxWidth()\r\n                    .height(50.dp),\r\n                shape = RoundedCornerShape(12.dp),\r\n                colors = TextFieldDefaults.textFieldColors(\r\n                    containerColor = Color.LightGray\r\n                )\r\n            )\r\n\r\n            Spacer(modifier = Modifier.height(12.dp))\r\n\r\n            // Slutpunkt input felt\r\n            Text(\r\n                text = \"Slutpunkt\",\r\n                fontWeight = FontWeight.Bold,\r\n                color = Color(0xFF4CAF50)\r\n            )\r\n            TextField(\r\n                value = slutpunkt,\r\n                onValueChange = { slutpunkt = it },\r\n                modifier = Modifier\r\n                    .fillMaxWidth()\r\n                    .height(50.dp),\r\n                shape = RoundedCornerShape(12.dp),\r\n                colors = TextFieldDefaults.textFieldColors(\r\n                    containerColor = Color.LightGray\r\n                )\r\n            )\r\n\r\n            Spacer(modifier = Modifier.height(32.dp))\r\n\r\n            //Gem knap til input felt\r\n// henter data fra firestore.kt\r\n            Button(\r\n                onClick = {\r\n                        if (userId != null) {\r\n                           fireStore.gemKlimaplanData(userId = \"\", startpunkt, slutpunkt)\r\n                        }\r\n                    }\r\n                ,\r\n                colors = ButtonDefaults.buttonColors(containerColor = Color(0xFF4CAF50)),\r\n                modifier = Modifier\r\n                    .fillMaxWidth()\r\n                    .height(40.dp)\r\n            ) {\r\n                Text(\r\n                    text = \"GEM\",\r\n                    fontWeight = FontWeight.Bold,\r\n                    color = Color.Black\r\n                )\r\n            }\r\n\r\n            // Billede i bunden\r\n            Box(\r\n                modifier = Modifier.fillMaxWidth(),\r\n                contentAlignment = Alignment.BottomEnd\r\n            ) {\r\n                Image(\r\n                    painter = painterResource(R.drawable.planet),\r\n                    contentDescription = \"Jord ikon\",\r\n                    modifier = Modifier.size(60.dp)\r\n                )\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n@Composable\r\nfun InfoSection(title: String, description: String) {\r\n    Column(modifier = Modifier.padding(vertical = 8.dp)) {\r\n        Text(\r\n            text = title,\r\n            fontSize = 15.sp,\r\n            fontWeight = FontWeight.Bold,\r\n            color = Color(0xFF4CAF50)\r\n        )\r\n        Spacer(modifier = Modifier.height(4.dp))\r\n        Text(\r\n            text = description,\r\n            fontSize = 16.sp,\r\n            color = Color.DarkGray\r\n        )\r\n        Spacer(modifier = Modifier.height(12.dp))\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/gronkokken/ui/pages/klimaplan.kt b/app/src/main/java/com/example/gronkokken/ui/pages/klimaplan.kt
--- a/app/src/main/java/com/example/gronkokken/ui/pages/klimaplan.kt	(revision 537922b587da8982bfd477a96797502f73837fdf)
+++ b/app/src/main/java/com/example/gronkokken/ui/pages/klimaplan.kt	(date 1748438558417)
@@ -57,7 +57,9 @@
 
 @OptIn(ExperimentalMaterial3Api::class)
 @Composable
-fun ClimaPlanScreen(userViewModel: com.example.gronkokken.repository.UserViewModel = viewModel(), navHostController: NavHostController) {
+fun ClimaPlanScreen(
+    userViewModel: com.example.gronkokken.repository.UserViewModel = viewModel(),
+    navHostController: NavHostController) {
     val robotoBold = FontFamily(Font(R.font.roboto))
     var startpunkt by remember { mutableStateOf("") }
     var slutpunkt by remember { mutableStateOf("") }
