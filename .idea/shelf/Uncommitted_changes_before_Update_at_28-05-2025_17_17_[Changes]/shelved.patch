Index: app/src/main/java/com/example/gronkokken/repository/firestore.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.gronkokken.repository\r\n//filnavnet er med sm√•t, men lad v√¶re med at fikse!!!, det g√∏r github skr√¶mt fra vid og sans :D.\r\nimport android.util.Log\r\nimport com.example.gronkokken.models.Recipe\r\nimport com.google.firebase.Firebase\r\nimport com.google.firebase.firestore.FirebaseFirestore\r\nimport com.google.firebase.firestore.firestore\r\nimport com.google.firebase.firestore.toObject\r\nimport kotlinx.coroutines.tasks.await\r\nimport java.time.LocalDate\r\n\r\nclass Firestore {\r\n\r\n    //connection detaljer kan findes i app/google-services.json\r\n    private val db = Firebase.firestore\r\n\r\n    suspend fun getAllRecipes ():List<Recipe> { //Christian\r\n        val collection = db.collection(\"recipes\")\r\n\r\n        val returnList:MutableList<Recipe> = mutableListOf()\r\n\r\n        collection.get().await().forEach {\r\n            val recipe: Recipe = it.toObject()\r\n            recipe.id = it.id\r\n            recipe.initLogic()\r\n            returnList.add(recipe)\r\n        }\r\n\r\n        Log.d(\"DB-Call\",\"amount of collected recipes: \" + returnList.size.toString())\r\n        return returnList.toList()\r\n    }\r\n\r\n    suspend fun getRecipeByName (name:String): Recipe { //Christian\r\n        val collection = db.collection(\"recipes\")\r\n\r\n        var recipe: Recipe = Recipe()\r\n\r\n        collection.whereEqualTo(\"name\",name).get().await().forEach {    //der kan v√¶re problemer hvis der kommer mere end 1 resultat, men det burde der ikke:D\r\n            recipe = it.toObject<Recipe>()\r\n            recipe.id = it.id\r\n            recipe.initLogic()\r\n        }\r\n\r\n        return recipe\r\n    }\r\n\r\n    suspend fun getRecipeById (id:String): Recipe { //Christian\r\n        val document = db.collection(\"recipes\").document(id)\r\n\r\n        var recipe: Recipe = Recipe()\r\n\r\n        val item = document.get().await()\r\n\r\n        recipe = item.toObject<Recipe>()!!  //vi er sikre p√• at der ikke er null, siden alle id som bruges i appen er taget fra databasen\r\n        recipe.id = item.id\r\n        recipe.initLogic()\r\n\r\n        return recipe\r\n    }\r\n\r\n    suspend fun getCurrentRecipeId ():String {  //Christian\r\n        val currentDate = LocalDate.now()\r\n        val daysToNextSunday = java.time.DayOfWeek.SUNDAY.value - currentDate.dayOfWeek.value //s√∏ndag er altid 7, har bare inkluderet DayOfWeek s√• det var nemere lige at gennemskue hvad der sker\r\n        val comingSunday = currentDate.plusDays(daysToNextSunday.toLong())\r\n\r\n        val collection = db.collection(\"recipes\")\r\n        val responseList = collection.whereEqualTo(\"endDateRaw\",comingSunday.toString()).get().await()\r\n\r\n        if (responseList.size() > 1) {\r\n            Log.d(\"DB-Call\",\"missing or overlapping date in DB\")\r\n            return responseList.toList()[0].id\r\n        }\r\n        else if (responseList.size() < 1) {\r\n            Log.d(\"DB-Call\",\"no opskrift i dag<3, fejl\")\r\n            return \"problem\"\r\n        }\r\n        else {\r\n            return responseList.toList()[0].id\r\n        }\r\n    }\r\n    suspend fun hentLaunchedEffectData(documentId: String): Pair<String, String> {\r\n        return try {\r\n            val doc = FirebaseFirestore.getInstance()\r\n                .collection(\"klimaplan\")\r\n                .document(documentId)\r\n                .get()\r\n                .await()\r\n            if (doc.exists()) {\r\n                val startpunkt = doc.getString(\"startpunkt\") ?: \"\"\r\n                val slutpunkt = doc.getString(\"slutpunkt\") ?: \"\"\r\n                Pair(startpunkt, slutpunkt)\r\n            } else {\r\n                Pair(\"\", \"\")\r\n            }\r\n        } catch (e: Exception) {\r\n            Log.e(\"Firestore\", \"Fejl ved hentning\", e)\r\n            Pair(\"\", \"\")\r\n        }\r\n    }\r\n\r\n    // \uD83D\uDD35 Funktion til at gemme data\r\n    fun gemKlimaplanData(documentId: String, startpunkt: String, slutpunkt: String) {\r\n        val db = FirebaseFirestore.getInstance()\r\n        val data = hashMapOf(\r\n            \"startpunkt\" to startpunkt,\r\n            \"slutpunkt\" to slutpunkt\r\n        )\r\n\r\n        db.collection(\"klimaplan\")\r\n            .document(documentId)\r\n            .set(data)\r\n            .addOnSuccessListener {\r\n                Log.d(\"Firestore\", \"Data gemt i dokumentet: $documentId\")\r\n            }\r\n            .addOnFailureListener { e ->\r\n                Log.w(\"Firestore\", \"Fejl ved gemning\", e)\r\n            }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/gronkokken/repository/firestore.kt b/app/src/main/java/com/example/gronkokken/repository/firestore.kt
--- a/app/src/main/java/com/example/gronkokken/repository/firestore.kt	(revision cd9c460f4f775c8a0d9b1bc8662766bb3200d113)
+++ b/app/src/main/java/com/example/gronkokken/repository/firestore.kt	(date 1748445400550)
@@ -71,14 +71,14 @@
             return responseList.toList()[0].id
         }
         else if (responseList.size() < 1) {
-            Log.d("DB-Call","no opskrift i dag<3, fejl")
+            Log.d("DB-Call","no recipe today<3, sorry")
             return "problem"
         }
         else {
             return responseList.toList()[0].id
         }
     }
-    suspend fun hentLaunchedEffectData(documentId: String): Pair<String, String> {
+    suspend fun hentLaunchedEffectData(documentId: String): Pair<String, String> {  //Sahra
         return try {
             val doc = FirebaseFirestore.getInstance()
                 .collection("klimaplan")
@@ -99,7 +99,7 @@
     }
 
     // üîµ Funktion til at gemme data
-    fun gemKlimaplanData(documentId: String, startpunkt: String, slutpunkt: String) {
+    fun gemKlimaplanData(documentId: String, startpunkt: String, slutpunkt: String) { //Sahra
         val db = FirebaseFirestore.getInstance()
         val data = hashMapOf(
             "startpunkt" to startpunkt,
